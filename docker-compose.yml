version: '2'
services:
  nginx:
    image: nginx
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/etc/nginx/conf.d"
      - "/etc/nginx/vhost.d"
      - "/usr/share/nginx/html"
      - "./volumes/proxy/certs:/etc/nginx/certs:ro"
    networks:
      - proxy-tier
  nginx-gen:
    image: jwilder/docker-gen
    container_name: nginx-gen
    volumes:
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
      - "./volumes/proxy/templates/nginx-compose-v2.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro"
    volumes_from:
      - nginx
    entrypoint: /usr/local/bin/docker-gen -notify-sighup nginx -watch -only-exposed -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
  letsencrypt-nginx-proxy-companion:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: letsencrypt-nginx-proxy-companion
    volumes_from:
      - nginx
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./volumes/proxy/certs:/etc/nginx/certs:rw"
    environment:
      - NGINX_DOCKER_GEN_CONTAINER=nginx-gen
      - "ACME_CA_URI=https://acme-staging.api.letsencrypt.org/directory"
      - "DEBUG=true"
  web:
    build:
      context: .
      dockerfile: Dockerfile.development
    command: npm run development
    environment:
      NODE_ENV: development
      VIRTUAL_HOST: crop.jbbr.net
      VIRTUAL_NETWORK: nginx-proxy
      VIRTUAL_PORT: 80
      LETSENCRYPT_HOST: crop.jbbr.net
      LETSENCRYPT_EMAIL: tobias.wollowski@student.hpi.de
    restart: unless-stopped
    ports:
      - 8080:3000
      - 9229:9229
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - proxy-tier

networks:
  proxy-tier:
    external:
      name: "nginx-proxy"
